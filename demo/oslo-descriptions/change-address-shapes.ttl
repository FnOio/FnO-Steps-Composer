@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ex: <https://example.org/ns/example#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix ops: <https://data.vlaanderen.be/shacl/persoon-basis#> .
@prefix o-steps: <https://fast.ilabt.imec.be/ns/oslo-steps/0.2#> .
@prefix o-persoon: <https://data.vlaanderen.be/ns/persoon#> .


@prefix state: <https://fast.ilabt.imec.be/api/v5/states#> .
@prefix shape: <https://fast.ilabt.imec.be/api/v5/shapes#> .
@prefix step: <https://fast.ilabt.imec.be/api/v5/steps#> .





# needed for advanced shacl, to use prefixes in SPARQL query string
<http://schema.org/> sh:prefix "schema" .
<https://data.vlaanderen.be/doc/applicatieprofiel/persoon-basis#> sh:prefix "o-persoon" .


#
# first name (state shape)
#



shape:firstNameShape a o-steps:StateShape ;
  rdfs:label "A citizen's first name"@en ;
  rdfs:comment "User with valid first name"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:firstNameLength .

shape:firstNameLength a sh:PropertyShape ;
  rdfs:label "First name length constraints"@en ;
  rdfs:comment "Shape for a valid first name"@en ;
  sh:path foaf:givenName ;
  sh:minLength 2 ;
  sh:maxLength 100 ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:minCount 1 .

#
# last name (state shape)
#
shape:lastNameShape a o-steps:StateShape ;
  rdfs:label "A citizen's last name"@en ;
  rdfs:comment "User with valid last name"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:lastNameLength .

shape:lastNameLength a sh:PropertyShape ;
  rdfs:label "Last name constraints"@en ;
  rdfs:comment "Constraints for a valid last name"@en ;
  sh:path foaf:familyName ;
  sh:datatype xsd:string ;
  sh:minLength 2 ;
  sh:maxLength 100 ;
  sh:maxCount 1 ;
  sh:minCount 1 .


#
# gender constraints (state)
#
shape:genderShape a o-steps:StateShape ;
  rdfs:label "A citizen's gender"@en ;
  rdfs:comment "User with a valid gender"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:genderValidValues .

shape:genderValidValues a sh:PropertyShape ;
  rdfs:label "Valid gender values"@en ;
  sh:path o-persoon:geslacht ;
  sh:in ( "male" "female" );
  sh:maxCount 1 ;
  sh:minCount 1  .

#
# Email address (state)
#
shape:emailAddressShape a o-steps:StateShape ;
  rdfs:label "A citizen's email"@en ;
  rdfs:comment "User with a valid email address"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:emailPattern .

shape:emailPattern a sh:PropertyShape ;
  rdfs:label "Valid email address"@en ;
  sh:path schema:email ;
  sh:datatype xsd:string ;
  sh:pattern "^^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$" ;
  sh:minCount 1 .



#
# Mobile phone number
#
shape:mobilePhoneNumberShape a o-steps:StateShape ;
  rdfs:label "A citizen's mobile phone number"@en ;
  rdfs:comment "User with a valid mobile phone number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property [
    sh:path schema:contactPoint;
    sh:qualifiedValueShape [ 
      sh:path  schema:contactType;
      sh:hasValue "gsm" 
    ] ;
    sh:property [ 
      sh:path schema:telephone;
      sh:datatype xsd:string ;
      sh:pattern "^(\\+)?([ 0-9]){4,16}$";
      sh:minCount 1;
    ];
    sh:qualifiedMinCount 1 ;
  ]  .


#
# phone number
#
shape:phoneNumberShape a o-steps:StateShape ;
  rdfs:label "A citizen's phone number"@en ;
  rdfs:comment "User with a valid phone number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property [
    sh:path schema:contactPoint;
    sh:qualifiedValueShape [ 
      sh:path  schema:contactType;
      sh:hasValue "telephone" 
    ] ;
    sh:property [ 
      sh:path schema:telephone;
      sh:pattern "^(\\+)?([ 0-9]){4,16}$";
      sh:minCount 1 
    ];
    sh:qualifiedMinCount 1 ;
  ] .



#
# national number
#
shape:nationalNumberBelgiumShape a o-steps:StateShape ;
  rdfs:label "Householder national number"@en ;
  rdfs:comment "User with valid Belgian national number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:nationalNumberPatternBelgium ;
  sh:property shape:nationalNumberObliged .

shape:nationalNumberObliged a sh:PropertyShape ;
  rdfs:label "Obliged national number"@en ;
  rdfs:label "Verplicht nationaal nummer"@nl ;
  rdfs:label "Benötigte Personenkennzeichnung"@de ;
  rdfs:comment "There can be exactly one national number"@en ;
  rdfs:comment "Er kan precies één nationaal nummer zijn"@nl ;
  rdfs:comment "Es kann nur genau eine Personenkennzeichnung geben"@de ;
  sh:path o-persoon:registratie ;
  sh:datatype xsd:string ;
    # original pattern (without escaping): "^[0-9]{2}[.\- ]{0,1}[0-9]{2}[.\- ]{0,1}[0-9]{2}[.\- ]{0,1}[0-9]{3}[.\- ]{0,1}[0-9]{2}$" 
  sh:pattern "^[0-9]{2}[.\\- ]{0,1}[0-9]{2}[.\\- ]{0,1}[0-9]{2}[.\\- ]{0,1}[0-9]{3}[.\\- ]{0,1}[0-9]{2}$" ;
  sh:minCount 1 ;
  sh:maxCount 1 .

#
# bank account number (state)
#
shape:bankAccountNumberEuropeShape a o-steps:StateShape ;
  rdfs:label "Citizen bank account number"@en ;
  rdfs:comment "User with valid bank account number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:bankAccountNumberPatternEurope .

shape:bankAccountNumberPatternEurope a sh:PropertyShape ;
  rdfs:label "IBAN pattern"@en ;
  rdfs:comment "The regular expression of a European bank account number (IBAN)"@en ;
  sh:path ex:bankAccountNumber ;
  sh:datatype xsd:string ;
  sh:pattern "([A-Z]{2})\\s*\\t*\\d+";
  sh:minCount 1 . 



#
# nationality (state)
#
shape:nationalityShape a o-steps:StateShape ;
  rdfs:label "Citizen nationality"@en ;
  rdfs:comment "User with valid nationality"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validNationality .

shape:validNationality a sh:PropertyShape ;
  rdfs:label "Valid nationality"@en ;
  sh:path (o-persoon:heeftNationaliteit o-persoon:nationaliteit);
  sh:datatype xsd:string;
  sh:minCount 1  .


#
# residence permit (state)
#
#shape:residencePermitShape a o-steps:StateShape ;
#  rdfs:label "Citizen residence permit"@en ;
#  rdfs:comment "User with valid residence permit"@en ;
#  rdfs:comment "Assuming that if a Citizen has an official address there is also a residence permit. Needs a change!"@en ;
#  sh:targetClass o-persoon:Inwoner ;
#  sh:property shape:validResidence .

#shape:validResidence a sh:PropertyShape ;
#  rdfs:label "Valid residence"@en ;
#  rdfs:comment "Assuming that if a Citizen has an official address there is also a residence permit. Needs a change!"@en ;
#  sh:path ex:residencePermit ;
  # there is no residence permit in OSLO, first trial was to use Verblijfsplaats instead, but someone can have an address without a residence permit
  # sh:path o-persoon:heeftVerblijfplaats ;
#  sh:datatype xsd:string;
#  sh:minCount 1  .

#
# birth date (state)
#  
shape:birthDateShape a o-steps:StateShape ;
  rdfs:label "Citizen birth date"@en ;
  rdfs:comment "User with a valid birth date"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validBirthDate .

shape:validBirthDate a sh:PropertyShape ;
  rdfs:label "Valid date of birth"@en ;
  sh:path ( o-persoon:heeftGeboorte o-persoon:datum ); # o-persoon:heeftGeboorte ;
  sh:minCount 1 ;
  sh:datatype xsd:date;
  sh:maxCount 1 .


#
# applicatnt info
#
shape:applicantInfoSubmittedShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:applicantInfoValue .

shape:applicantInfoValue  a sh:PropertyShape ;
  sh:path ex:applicantInfoSubmitted;
  sh:hasValue true .
#
# city of birth (state)
#
shape:cityOfBirthShape a o-steps:StateShape ;
  rdfs:label "Citizen city of birth"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validBirth .

shape:validBirth a sh:PropertyShape ;
  rdfs:label "Valid city of birth"@en ;
  sh:path ( o-persoon:heeftGeboorte o-persoon:plaats ) ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
  sh:datatype xsd:string;
  sh:class o-persoon:Geboorte ;
#  sh:node ops:PersoonsgebeurtenisShape 
.


#
# address
#
shape:addressShape a o-steps:StateShape ;
  rdfs:label "Citizen address"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:addressExistence  .

shape:addressExistence a sh:PropertyShape ;
  sh:path ( o-persoon:heeftVerblijfplaats o-persoon:verblijfsadres) ;
  sh:datatype xsd:string;
  sh:maxCount 1 ;
  sh:minCount 1 .
# todo: address should be linked to http://www.w3.org/ns/locn#fullAddress

#
# profession
#
shape:professionShape a o-steps:StateShape ;
  rdfs:label "Citizen profession"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validProfession .

shape:validProfession a sh:PropertyShape ;
  rdfs:label "Valid profession" ;
  sh:path schema:hasOccupation ;
  sh:datatype xsd:string;
  sh:minCount 1 .

#
# number of family members
#
shape:numberOfFamilyMembersShape a o-steps:StateShape ;
  rdfs:label "Citizen number of family members"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validNumberOfFamilyMembers .

shape:validNumberOfFamilyMembers a sh:PropertyShape ;
  rdfs:label "valid number of family members"@en ;
  sh:path ex:numberOfFamilyMembers ;
  sh:datatype xsd:integer;
  sh:minInclusive 1 ;
  sh:minCount 1 ;
  sh:maxCount 1 .

#
# moving date
#
shape:movingDateShape a o-steps:StateShape ;
  rdfs:label "Citizen moving date"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validMovingDate .

shape:validMovingDate a sh:PropertyShape ;
  rdfs:label "valid date" ;
  sh:path ex:movingDate ;
  sh:datatype xsd:date ;
  sh:maxCount 1 ;
  sh:minCount 1 .

#
# moving addres
#
shape:movingAddressShape a o-steps:StateShape ;
  rdfs:label "Citizen moving address"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validMovingAddress .

shape:validMovingAddress a sh:PropertyShape ;
  rdfs:label "valid moving address"@en ;
  sh:path ex:movingAddress ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:minCount 1 .
  
#
# billing address
#
shape:billingAddressShape a o-steps:StateShape ;
  rdfs:label "Citizen billing address"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:validBillingAddress .

shape:validBillingAddress a sh:PropertyShape ;
  rdfs:label "valid billing address"@en ;
  sh:path ex:billingAddress ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:minCount 1  .

#
# moving city
# TODO: that should actually be part of a Verblijfsplaats or Adresvoorstelling
#
shape:movingCity a o-steps:State ;
  rdfs:label "City a citizen wants to move to"@en .

shape:movingCityShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:movingCityExistence .

shape:movingCityExistence a sh:PropertyShape ;
  sh:path ex:movingCity;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:minCount 1 .


#waste containers
shape:number40LiterGreyWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number40LiterGreyWasteContainerExistence .

shape:number40LiterGreyWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested40LiterGreyWasteContainers;
  sh:in (0 1 2 3);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:number120LiterGreyWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number120LiterGreyWasteContainerExistence .

shape:number120LiterGreyWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested120LiterGreyWasteContainers;
  sh:in (0 1);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:number240LiterGreyWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number240LiterGreyWasteContainerExistence .

shape:number240LiterGreyWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested240LiterGreyWasteContainers;
  sh:in (0 1);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:greyWasteContainerLockShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:lockNeededGreyWasteContainerExistence .

shape:lockNeededGreyWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:lockNeededForGreyWasteContainer;
  sh:datatype xsd:boolean;
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:number40LiterGreenWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number40LiterGreenWasteContainerExistence .

shape:number40LiterGreenWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested40LiterGreenWasteContainers;
  sh:in (0 1 2 3);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:number120LiterGreenWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number120LiterGreenWasteContainerExistence .

shape:number120LiterGreenWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested120LiterGreenWasteContainers;
  sh:in (0 1 2);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:greenWasteContainerLockShape  a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:lockNeededGreenWasteContainerExistence .

shape:lockNeededGreenWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:lockNeededForGreenWasteContainer;
  sh:datatype xsd:boolean;
  sh:maxCount 1 ;
  sh:minCount 1 .

#todo: make a shortcut rule for "yes"
shape:greenWasteSelfCompostShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:greenWasteSelfCompostExistence .

shape:greenWasteSelfCompostExistence a sh:PropertyShape ;
  sh:path ex:needForGreenWasteContainer;
  sh:datatype xsd:boolean;
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:greenWasteContainerStopCollectingInfoShape  a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:greenWasteContainerStopExistence .

shape:greenWasteContainerStopExistence a sh:PropertyShape ;
  sh:path ex:stopGreeWasteContainer;
  sh:datatype xsd:boolean;
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:greenWasteInfoShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:greenWasteInfoExistence .

shape:greenWasteInfoExistence a sh:PropertyShape ;
  sh:path ex:providedGreenWasteInformation;
  sh:hasValue true .


shape:number40LiterPaperWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number40LiterPaperWasteContainerExistence .

shape:number40LiterPaperWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested40LiterPaperWasteContainers;
  sh:in (0 1 2 3);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:number240LiterPaperWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number240LiterPaperWasteContainerExistence .

shape:number240LiterPaperWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested240LiterPaperWasteContainers;
  sh:in (0 1);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:number1100LiterPaperWasteContainerShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:number1100LiterPaperWasteContainerExistence .

shape:number1100LiterPaperWasteContainerExistence a sh:PropertyShape ;
  sh:path ex:numberOfRequested1100LiterPaperWasteContainers;
  sh:in (0 1);
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:wasteInfoShownShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:wasteInfoShown .

shape:wasteInfoShown a sh:PropertyShape ;
  sh:path ex:wasteInfoShownToUser ;
  sh:hasValue true .

#Confirmation of address change
shape:addressChangeConfirmedShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:addressChangeConfirmationValue .

shape:addressChangeConfirmationValue a sh:PropertyShape ;
  sh:path ex:confirmationOfAddressChange;
    sh:hasValue true .

shape:addressChangeOnEIDShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:addressChangeOnEIDExistence .

shape:addressChangeOnEIDExistence a sh:PropertyShape ;
  sh:path ex:addressChanged;
  sh:hasValue true .

shape:appointmentShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:appointmentExistence .

shape:appointmentExistence a sh:PropertyShape ;
  sh:path ex:hasAppointmentDate;
  sh:datatype xsd:date;
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:wasteCollection a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:wasteCollectionRequestValue .

shape:wasteCollectionRequestValue a sh:PropertyShape ;
  sh:path ex:wasteCollectionRequested;
  sh:hasValue true .

shape:addressChangeDeclaredShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:addressChangeValue .

shape:addressChangeValue  a sh:PropertyShape ;
  sh:path ex:addressChangeDeclared;
  sh:hasValue true .


shape:transportRequestedShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:transportRequestedExistence .

shape:transportRequestedExistence  a sh:PropertyShape ;
  sh:path ex:transportRequested;
  sh:datatype xsd:boolean;
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:mobilityRequestedShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:mobilityRequestedExistence .

shape:mobilityRequestedExistence  a sh:PropertyShape ;
  sh:path ex:mobilityRequested;
  sh:datatype xsd:boolean;
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:drivingLicenceExchangeRequestedShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:drivingLicenceExchangeExistence .

shape:drivingLicenceExchangeExistence  a sh:PropertyShape ;
  sh:path ex:drivingLicenceExchangeRequested;
  sh:datatype xsd:boolean;
  sh:maxCount 1 ;
  sh:minCount 1 .

shape:policeVisitRequestedShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:policeVisitRequestedValue .

shape:policeVisitRequestedValue  a sh:PropertyShape ;
  sh:path ex:policeVisitRequested ;
  sh:hasValue true . 

shape:familyInfoProvidedShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:familyInfoValue .

shape:familyInfoValue a sh:PropertyShape ;
  sh:path ex:providedFamilyInformation ;
  sh:hasValue true . 

shape:availabilityShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:availabilityExistence .


shape:availabilityExistence  a sh:PropertyShape ;
  sh:path ex:availabilityInfo ;
  sh:datatype xsd:dateTime;
  sh:maxCount 5 ;
  sh:minCount 1 .

shape:detailFamilyMemberShape a o-steps:StateShape ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shape:detailFamilyMemberExistence .


shape:detailFamilyMemberExistence  a sh:PropertyShape ;
  sh:path ex:familyMember ;
  sh:datatype xsd:string ;
  sh:minCount 1 .

#
# 
