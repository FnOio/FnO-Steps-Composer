@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix o-address: <https://data.vlaanderen.be/ns/adres#>.
@prefix o-steps: <https://fast.ilabt.imec.be/ns/oslo-steps/0.2#>.
@prefix ex: <http://example.org/ns/example#>.
@prefix xl: <http://www.w3.org/2008/05/skos-xl#>.
@prefix state: <https://fast.ilabt.imec.be/api/v5/states#>.
@prefix shape: <https://fast.ilabt.imec.be/api/v5/shapes#>.
@prefix step: <https://fast.ilabt.imec.be/api/v5/steps#>.
@prefix p-plan: <http://purl.org/net/p-plan#>.
@prefix ns1: <https://example.org/ns/example#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix schema: <http://schema.org/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix ops: <https://data.vlaanderen.be/shacl/persoon-basis#>.
@prefix o-persoon: <https://data.vlaanderen.be/ns/persoon#>.
@prefix ns2: <https://example.org/ns/oslo-steps#>.
@prefix var: <https://example.org/ns/var#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix gps: <http://josd.github.io/eye/reasoning/gps/gps-schema#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix oslo: <https://example.org/ns/oslo#>.
@prefix ns3: <http://josd.github.io/.well-known/genid/pP7dSETOSHCTU6bSn:iLn_1X3mg#>.
@prefix ns4: <http://josd.github.io/.well-known/genid/3xusu:8P3::CpVSgPAirSB1FrCA#>.
@prefix : <http://example.org#>.

{
    {?map gps:description (?from ?between ?to ?step ?duration ?cost ?belief ?comfort)} <= ?Where.

    (?Where ?to) log:conjunction ?all.

    ?x e:findall ( {?ss ?pp ?oo}  {  ?all log:includes {?ss ?pp ?oo}. ?x e:call {?ss ?pp ?oo} } ?out ). 

    (?all ?out) :unifyList ?all.

    (?all ?to) e:graphIntersection ?to. 

    ?x e:findall ( {?step :variablesToReplace ?o} {?to log:includes {?s ?p ?o. }. ?o e:label ?ooo. ?x e:fail { ?to log:includes {?o ?ppp ?oooo. }}. } ?lll ).

    (({?step :expectedTriples ?to}) ?lll) list:append ?cons.

    ?cons log:conjunction ?cons2.

    ?cons2 e:labelvars ?cons3.
}
=>
?cons3.
