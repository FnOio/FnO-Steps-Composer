@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix p-plan: <http://purl.org/net/p-plan#> .
@prefix o-address: <https://data.vlaanderen.be/ns/adres#> .
@prefix o-steps: <https://fast.ilabt.imec.be/ns/oslo-steps/0.2#> .
@prefix ex: <https://example.org/ns/example#> .
@prefix var: <https://example.org/ns/var#> .
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX gps: <http://josd.github.io/eye/reasoning/gps/gps-schema#>
@prefix : <https://example.org/ns/example#> .
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix o-persoon: <https://data.vlaanderen.be/ns/persoon#> .
@prefix var: <http://josd.github.io/.well-known/genid/pP7dSETOSHCTU6bSn:iLn_1X3mg#>.

{

 ?state a o-steps:State.
 _:x e:findall (?a {?state o-steps:hasStateShape ?stateShape. 
 ?stateShape :pattern (?a ?b)} ?list).
 ?list log:conjunction ?all1.
 ({?user  a o-persoon:Inwoner.} ?all1) log:conjunction ?all.

_:xx e:trace ?all.

 _:x e:findall ( {?ss ?pp ?oo}  {  ?all log:includes {?ss ?pp ?oo}. ?x e:call {?ss ?pp ?oo} } ?out ). 

#?k e:trace (?all ?out).

(?all ?out) :unifyList ?all.



?x e:findall ( {?state :variablesToReplace ?o} {?all log:includes {?s ?p ?o. }. ?o e:label ?ooo. ?x e:fail { ?to log:includes {?o ?ppp ?oooo. }}. } ?lll ).



(({?state :expectedTriples ?all}) ?lll) list:append ?cons.

?cons log:conjunction ?cons2.

?cons2 e:labelvars ?cons3.
}
=>
?cons3.



