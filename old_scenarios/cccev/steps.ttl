@prefix fno-steps: <https://w3id.org/imec/ns/fno-steps#> .
@prefix xl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix state: <https://fast.ilabt.imec.be/api/v5/states#> .
@prefix step: <https://fast.ilabt.imec.be/api/v5/steps#> .
@prefix shape: <https://fast.ilabt.imec.be/api/v5/shapes#> .
@prefix cccev: <http://data.europa.eu/m8g/> .

step:proveMajority a fno-steps:JourneyLevelStep, fno-steps:ContainerLevelStep ;
    fno-steps:hasDescription [ xl:literalForm "Prove your age"@nl ] ;
    fno-steps:requiresState fno-steps:emptyState ;
    fno-steps:producesState state:provenMajority .

step:provideIDcardInfo a fno-steps:ComponentLevelStep ;
    fno-steps:hasDescription [ xl:literalForm "Retrieve your ID card info"@nl ] ;
    fno-steps:requiresState fno-steps:emptyState ;
    fno-steps:producesState state:validatedIdcardInfo .

# step:proveIDcardInfo a fno-steps:ComponentLevelStep ;
#     fno-steps:hasDescription [ xl:literalForm "Prove your ID card info"@nl ] ;
#     fno-steps:requiresState state:idcardInfo ;
#     fno-steps:producesState state:validatedIdcardInfo . # TODO verifiable credential? additional step?

step:proveAgeViaIDcardInfo a fno-steps:ComponentLevelStep, fno-steps:BusinessRule ; # TODO is this a step? is this automatic via a business rule? Additional class?
    fno-steps:hasDescription [ xl:literalForm "Prove your age via your validated birth date"@nl ] ;
    fno-steps:requiresState state:validatedBirthDate ; # you can infer your birthdate state is based on your idcardInfo state
    fno-steps:producesState state:validatedcitizenAge ; #if this would be an automatic step, you could generate _:evidence cccev:supportsValue _:suppordedValue
    fno-steps:businessRule """ {?x ex:birthdate ?y . ?x :now ?now . ?diff :diff (?now ?y) . ?years :diffToYears ?diff .} => {?x ex:age ?years}""" .

step:proveMajorityComponent a fno-steps:ComponentLevelStep, fno-steps:BusinessRule ;
    fno-steps:hasDescription [ xl:literalForm "Prove your majority via your validated age"@en ] ;
    fno-steps:requiresState state:validatedcitizenAge ;
    fno-steps:producesState state:provenMajority ;
    fno-steps:businessRule """ {?x ex:age ?y . ?z :isLarger (?y 18)} => {?x ex:majority ?z} """ .
