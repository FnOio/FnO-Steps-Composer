@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix shp: <http://fast.ilabt.imec.be/states#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ex: <https://example.org/ns/example#> .
@prefix schema: <https://schema.org/> .
@prefix ops: <https://data.vlaanderen.be/shacl/persoon-basis#> .
@prefix o-steps: <https://fast.ilabt.imec.be/ns/oslo-steps#> .

# OSLO persoon application profile, because reused terms like first name are in an application profile
@prefix o-persoon: <https://data.vlaanderen.be/doc/applicatieprofiel/persoon-basis#> .

# needed for advanced shacl, to use prefixes in SPARQL query string
<https://schema.org/> sh:prefix "schema" .
<https://data.vlaanderen.be/doc/applicatieprofiel/persoon-basis#> sh:prefix "o-persoon" .


#
# first name
#
shp:firstNameShape a o-steps:StateShape ;
  rdfs:label "A citizen's first name"@en ;
  rdfs:comment "User with valid first name"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:firstNameLength .

shp:firstNameLength a sh:PropertyShape ;
  rdfs:label "First name length constraints"@en ;
  rdfs:comment "Minimum and maximum for a valid first name"@en ;
  sh:path o-persoon:voornaam ;
  sh:minLength 2 ;
  sh:maxLength 25 .

#
# last name
#
shp:lastNameShape a o-steps:StateShape ;
  rdfs:label "A citizen's last name"@en ;
  rdfs:comment "User with valid first name"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:lastNameLength .

shp:lastNameLength a sh:PropertyShape ;
  rdfs:label "First name length constraints"@en ;
  rdfs:comment "Minimum and maximum for a valid first name"@en ;
  sh:path o-persoon:achternaam ;
  sh:minLength 2 ;
  sh:maxLength 25 .

#
# gender constraints (sorry 2019)
#
shp:genderShape a o-steps:StateShape ;
  rdfs:label "A citizen's gender"@en ;
  rdfs:comment "User with a valid gender"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:genderValidValues .

shp:genderValidValues a sh:PropertyShape ;
  rdfs:label "Valid gender values"@en ;
  sh:path o-persoon:geslacht ;
  sh:in ( "male" "female" ) .

#
# Email address
#
shp:emailAddressShape a o-steps:StateShape ;
  rdfs:label "A citizen's email"@en ;
  rdfs:comment "User with a valid email address"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:emailPattern .

shp:emailPattern a sh:PropertyShape ;
  rdfs:label "Valid email address"@en ;
  sh:path schema:email ;
  sh:pattern "todo" .

#
# Mobile phone number
#
shp:mobilePhoneNumberShape a o-steps:StateShape ;
  sh:deactivated true ;
  rdfs:label "A citizen's mobile phone number"@en ;
  rdfs:comment "User with a valid mobile phone number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  # this is wrong, it says that additionally all person's mobile phone numbers should be valid, not just the one from this person
  sh:and ( shp:validMobilePhoneNumber ) .


# this shape targets all contactPoints with type 'mobile' or 'gsm' of a person
shp:validMobilePhoneNumber a o-steps:StateShape ;
  rdfs:label "Valid mobile phone number"@en ;
  sh:target [
    a sh:SPARQLTarget ;
    sh:select """
      SELECT ?this
      WHERE {
        ?person a <https://data.vlaanderen.be/doc/applicatieprofiel/persoon-basis#Inwoner> ;
             <https://data.vlaanderen.be/doc/applicatieprofiel/persoon-basis#contactinfo> ?this .

        ?this <https://schema.org/contactType> ?type .

        FILTER( ?type IN ("mobile" "gsm") )
      }
    """ ;
  ] ;
  sh:and ( shp:mobilePhoneNumberPattern ) .

shp:mobilePhoneNumberPattern a sh:PropertyShape ;
  rdfs:label "Valid mobile phone number"@en ;
  sh:path schema:telephone ;
  sh:pattern "todo" .

#
# phone number
#
shp:phoneNumberShape a o-steps:StateShape ;
  sh:deactivated true ;
  rdfs:label "A citizen's phone number"@en ;
  rdfs:comment "User with a valid phone number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  # this is wrong, it says that additionally all person's mobile phone numbers should be valid, not just the one from this person
  sh:and ( shp:validPhoneNumber ) .

# this shape targets all contactPoints with type 'phone' of a person
shp:validPhoneNumber a o-steps:StateShape ;
  rdfs:label "Valid phone number"@en ;
  sh:target [
    a sh:SPARQLTarget ;
    sh:select """
      SELECT ?this
      WHERE {
        ?person a o-persoon:Inwoner> ;
             o-persoon: ?this .

        ?this schema: ?type .

        FILTER( ?type IN ("phone") )
      }
    """ ;
  ] ;
  sh:and ( shp:phoneNumberPattern ) .

shp:phoneNumberPattern a sh:PropertyShape ;
  rdfs:label "Valid phone number"@en ;
  sh:path schema:telephone ;
  sh:pattern "todo" .

#
# national number
#
shp:nationalNumberBelgiumShape a o-steps:StateShape ;
  rdfs:label "Householder national number"@en ;
  rdfs:comment "User with valid Belgian national number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:nationalNumberPatternBelgium ;
  sh:property shp:nationalNumberObliged .

shp:nationalNumberPatternBelgium a sh:PropertyShape ;
  rdfs:label "The regular expression of a Belgian national number"@en ;
  rdfs:label "De reguliere expressie van een Belgisch Rijksregisternummer"@nl ;
  rdfs:label "Der reguläre Ausdruck einer belgischen Reichsregisternummer"@de ;
  sh:path o-persoon:registratie .
# This statement raises syntax errors in n3
#  sh:pattern """^[0-9]{2}[.\- ]{0,1}[0-9]{2}[.\- ]{0,1}[0-9]{2}[.\- ]{0,1}[0-9]{3}[.\- ]{0,1}[0-9]{2}$""" .

shp:nationalNumberObliged a sh:PropertyShape ;
  rdfs:label "Obliged national number"@en ;
  rdfs:label "Verplicht nationaal nummer"@nl ;
  rdfs:label "Benötigte Personenkennzeichnung"@de ;
  rdfs:comment "There can be exactly one national number"@en ;
  rdfs:comment "Er kan precies één nationaal nummer zijn"@nl ;
  rdfs:comment "Es kann nur genau eine Personenkennzeichnung geben"@de ;
  sh:path ex:nationalNumber ;
  sh:minCount 1 ;
  sh:maxCount 1 .

#
# bank account number
#
shp:bankAccountNumberEuropeShape a o-steps:StateShape ;
  rdfs:label "Citizen bank account number"@en ;
  rdfs:comment "User with valid bank account number"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:bankAccountNumberPatternEurope .

shp:bankAccountNumberPatternEurope a sh:PropertyShape ;
  rdfs:label "IBAN pattern"@en ;
  rdfs:comment "The regular expression of a European bank account number (IBAN)"@en ;
  sh:path ex:bankAccountNumber ;
  sh:pattern "todo" .

#
# nationality
#
shp:nationalityShape a o-steps:StateShape ;
  rdfs:label "Citizen nationality"@en ;
  rdfs:comment "User with valid nationality"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:validNationality .

shp:validNationality a sh:PropertyShape ;
  rdfs:label "Valid nationality"@en ;
  sh:path o-persoon:heeftNationaliteit ;
  sh:class o-persoon:Nationaliteit .

#
# residence permit
#
shp:residencePermitShape a o-steps:StateShape ;
  rdfs:label "Citizen residence permit"@en ;
  rdfs:comment "User with valid residence permit"@en ;
  rdfs:comment "Assuming that if a Citizen has an official address there is also a residence permit. Needs a change!"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:validResidence .

shp:validResidence a sh:PropertyShape ;
  rdfs:label "Valid residence"@en ;
  rdfs:comment "Assuming that if a Citizen has an official address there is also a residence permit. Needs a change!"@en ;
  sh:path o-persoon:heeftVerblijfplaats ;
  sh:class o-persoon:Verblijfplaats .

#
# birth date
#  
shp:birthDateShape a o-steps:StateShape ;
  rdfs:label "Citizen birth date"@en ;
  rdfs:comment "User with a valid birth date"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:validBirth .

shp:validBirth a sh:PropertyShape ;
  rdfs:label "Valid date of birth"@en ;
  sh:path o-persoon:heeftGeboorte ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
  sh:class o-persoon:Geboorte ;
  sh:node ops:PersoonsgebeurtenisShape .

#
# city of birth
#
shp:cityOfBirthShape a o-steps:StateShape ;
  rdfs:label "Citizen city of birth"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:validBirth .

#
# address
#
shp:addressShape a o-steps:StateShape ;
  rdfs:label "Citizen address"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:validAddress .

shp:validAddress a sh:PropertyShape ;
  rdfs:label "valid address"@en ;
  sh:path o-persoon:verblijfsadres ;
  sh:node ops:VerblijfplaatsShape .

#
# profession
#
shp:professionShape a o-steps:StateShape ;
  rdfs:label "Citizen profession"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:validProfession .

shp:validProfession a sh:PropertyShape ;
  rdfs:label "Valid profession" ;
  sh:path schema:hasOccupation ;
  sh:minCount 1 .

#
# number of family members
#
shp:numberOfFamilyMembersShape a o-steps:StateShape ;
  rdfs:label "Citizen number of family members"@en ;
  sh:targetClass o-persoon:Inwoner ;
  sh:property shp:validNumberOfFamilyMembers .

shp:validNumberOfFamilyMembers a sh:PropertyShapes ;
  rdfs:label "valid number of family members"@en ;
  sh:path ex:numberOfFamilyMembers ;
  sh:minInclusive 1 .
