@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix p-plan: <http://purl.org/net/p-plan#> .
@prefix o-address: <https://data.vlaanderen.be/ns/adres#> .
@prefix o-steps: <https://fast.ilabt.imec.be/ns/oslo-steps/0.2#> .
@prefix ex: <https://example.org/ns/example#> .
@prefix var: <https://example.org/ns/var#> .
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX gps: <http://josd.github.io/eye/reasoning/gps/gps-schema#>
@prefix : <https://example.org/ns/example#> .
PREFIX list: <http://www.w3.org/2000/10/swap/list#>
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix o-persoon: <https://data.vlaanderen.be/ns/persoon#> .
@prefix var: <http://josd.github.io/.well-known/genid/pP7dSETOSHCTU6bSn:iLn_1X3mg#>.

{

?step a o-steps:Step.

?step o-steps:producesState ?ov.



_:x e:findall ({var:x ?path ?o.} { ?step o-steps:requiresState ?y. ?y o-steps:hasStateShape ?stateShape.  ?stateShape a o-steps:StateShape; sh:property ?property. ?property sh:path ?path; sh:minCount 1; sh:targetClass o-persoon:Inwoner.  } ?inTriples). 

_:x e:findall ({var:x ?path ?o.}   { ?step o-steps:requiresState ?y. ?y o-steps:hasStateShape ?stateShape.  ?stateShape a o-steps:StateShape; sh:property ?property; sh:targetClass o-persoon:Inwoner . ?property sh:path ?path; sh:minCount 1
                        } ?inTriples2).



_:x e:findall (({var:x ?path ?o.} {(var:x ?path) e:skolem ?o} ) { ?step  o-steps:producesState ?y. ?y o-steps:hasStateShape ?stateShape.  ?stateShape a o-steps:StateShape; sh:property ?property. ?property sh:path ?path; sh:minCount 1; sh:targetClass o-persoon:Inwoner.
                        } ?outTriples). 

_:x e:findall (({var:x ?path ?o.} {(var:x ?path) e:skolem ?o} )  { ?step  o-steps:producesState ?y. ?y o-steps:hasStateShape ?stateShape.  ?stateShape a o-steps:StateShape; sh:property ?property; sh:targetClass o-persoon:Inwoner . ?property sh:path ?path; sh:minCount 1
                        } ?outTriples2).

(?outTriples ?outTriples2  ) list:append ?outlist.


?outlist :separate ((true) ?outs (true) ?skol).
(?inTriples ?inTriples2  ?skol ({var:x a o-persoon:Inwoner}) ) list:append ?inlist.

#?outTriples  :produceSkolemfunctions (() ?skolem).
#?outTriples log:conjunction ?out.

?outs log:conjunction ?out. 
?inlist log:conjunction ?ins. 
}
=>
{
#the values here are currently fixed.
{ex:movemap gps:description (true true ?out ?step 1 1 0.97 0.97)} <= ?ins.
}.



